/*! @page n_mod Normal Module

@section n_mod_intro Introduction
This module is useful when cases are need to be registered with different library
names.

@section n_mod_ar Auto Registration
For detalied information on auto registration of benchmark cases and benchmark 
suites in this module see @ref auto_reg_bm.

The macros provided for auto registartion of benchmark case:
 - @ref auto_reg_bm1
 - @ref auto_reg_bm2
 - @ref auto_reg_bm3
 - @ref auto_reg_bm4
 - @ref auto_reg_bm5
 - @ref auto_reg_bm6
 - @ref auto_reg_bm7
 
The macros provided for auto registration of benchmark suite:
 - @ref auto_reg_bm8
 - @ref auto_reg_bm9
 
The macros provided for auto registration of parametrized benchmark cases:
 - @ref auto_reg_bm10
 - @ref auto_reg_bm11
 - @ref auto_reg_bm12
 - @ref auto_reg_bm13
 - @ref auto_reg_bm14
 - @ref auto_reg_bm15
 
The macros provided for auto registration of groups:
 - @ref auto_reg_bm16
 - @ref auto_reg_bm30
 
The macros provided for auto registration of group benchmark cases:
 - @ref auto_reg_bm17
 - @ref auto_reg_bm18
 - @ref auto_reg_bm19
 - @ref auto_reg_bm20
 - @ref auto_reg_bm21
 - @ref auto_reg_bm22
 - @ref auto_reg_bm23

The macros provided for auto registration of group parametrized benchmark cases:
 - @ref auto_reg_bm24
 - @ref auto_reg_bm25
 - @ref auto_reg_bm26
 - @ref auto_reg_bm27
 - @ref auto_reg_bm28
 - @ref auto_reg_bm29
 
@section n_mod_ar_ex Example

@code
#define MANAK_MODULE bench
#define MANAK_AUTO_MAIN
#define MANAK_INIT

#include <manak/manak.hpp>

void fun3(size_t a)
{
  MEASURE
  (
    for(size_t i = 0;i < a;i++);
  )
}

MANAK_AUTO_BENCHMARK_CASE_I(B1, lib1, 10)
{
  MEASURE
  (
    for(size_t i = 0;i < 1000;i++);
  )
}

MANAK_AUTO_BENCHMARK_CASE_TI(B1, lib2, 10, 50)
{
  MEASURE
  (
    for(size_t i = 0;i < 1000;i++);
  )
}

MANAK_AUTO_SUITE(Suite1);

MANAK_AUTO_BENCHMARK_CASE_T(B2, lib1, 50)
{
  MEASURE
  (
    for(size_t i = 0;i < 10000;i++);
  )
}

MANAK_AUTO_BENCHMARK_CASE_I(B2, lib2, 10)
{
  MEASURE
  (
    for(size_t i = 0;i < 10000;i++);
  )
}

MANAK_AUTO_SUITE(Suite2);

MANAK_ADD_CASE(MANAK_CREATE_BENCHMARK_WITH_TEMPLATE_I(B3, lib1, fun3, 10)->AddArgs((size_t)2000)->AddArgs((size_t)3000));
MANAK_ADD_CASE(MANAK_CREATE_BENCHMARK_WITH_TEMPLATE_T(B3, lib2, fun3, 50)->AddArgs((size_t)4000)->AddArgs((size_t)6000));

MANAK_AUTO_GROUP();

size_t iter;

GINIT()
{
  iter = 100;
}

MANAK_AUTO_GROUP_BENCHMARK_CASE("InGroup1", "Lib1")
{
  MEASURE
  (
    for(size_t i = 0;i < iter;i++);
  )
}

MANAK_AUTO_GROUP_BENCHMARK_CASE_I("InGroup1", "Lib2", 10)
{
  MEASURE
  (
    for(size_t i = 0;i < 10 * iter;i++);
  )
}

void fun1(size_t a)
{
  MEASURE
  (
    for(size_t i = 0;i < a * iter;i++);
  )
}

MANAK_ADD_TO_GROUP(MANAK_CREATE_GROUP_BENCHMARK_WITH_TEMPLATE_TI("InGroup2", "Lib1", fun1, 10, 50)->AddArgs(100)->AddArgs(1000));

MANAK_AUTO_GROUP_END();
@endcode

Output - 

HTML output can be seen <a href="samples/n_mod_1.html">HERE</a>

The equivalent manual registration code can be found at @ref n_mod_mr_ex.

@section n_mod_mr Manual Registration with Normal Mode
For detailed information on manual registration of benchmark cases and benchmark
suites in benchmark module see @ref man_reg_mbm.

The macros provided for manual registartion of benchmark case:
 - @ref man_reg_mbm1
 - @ref man_reg_mbm2
 - @ref man_reg_mbm3
 - @ref man_reg_mbm4
 - @ref man_reg_mbm5
 - @ref man_reg_mbm6
 
The macros provided for manual registration of benchmark suite:
 - @ref man_reg_mbm7
 
The macros provided for manual registration of parametrized benchmark cases:
 - @ref man_reg_mbm8
 - @ref man_reg_mbm9
 - @ref man_reg_mbm10
 - @ref man_reg_mbm11
 - @ref man_reg_mbm12
 - @ref man_reg_mbm13
 
The macros provided for manual registration of groups:
 - @ref man_reg_mbm14
 
The macros provided for manual registration of group benchmark cases:
 - @ref man_reg_mbm15
 - @ref man_reg_mbm16
 - @ref man_reg_mbm17
 - @ref man_reg_mbm18
 - @ref man_reg_mbm19
 - @ref man_reg_mbm20
 
The macros provided for manual registration of group parametrized benchmark cases:
 - @ref man_reg_mbm21
 - @ref man_reg_mbm22
 - @ref man_reg_mbm23
 - @ref man_reg_mbm24
 - @ref man_reg_mbm25
 - @ref man_reg_mbm26
 
@section n_mod_mr_ex Example

@code
bool bench_init();

#define MANAK_MODULE bench
#define MANAK_AUTO_MAIN
#define MANAK_INIT
#define MANAK_MANUAL_INIT_FUNCTION bench_init

#include <manak/manak.hpp>

using namespace std;
using namespace manak;

void fun3(size_t a)
{
  MEASURE
  (
    for(size_t i = 0;i < a;i++);
  )
}

void fun1()
{
  MEASURE
  (
    for(size_t i = 0;i < 1000;i++);
  )
}

void fun2()
{
  MEASURE
  (
    for(size_t i = 0;i < 1000;i++);
  )
}

void fun4()
{
  MEASURE
  (
    for(size_t i = 0;i < 10000;i++);
  )
}

void fun5()
{
  MEASURE
  (
    for(size_t i = 0;i < 10000;i++);
  )
}

MANAK_GROUP(TestGroup);

size_t iter;

GINIT()
{
  iter = 100;

  cases.push_back(MANAK_GROUP_BENCHMARK_CASE("InGroup1", "Lib1", fun2));
  cases.push_back(MANAK_GROUP_BENCHMARK_CASE_I("InGroup1", "Lib2", fun3, 10));
  cases.push_back(MANAK_CREATE_GROUP_BENCHMARK_WITH_TEMPLATE_TI("InGroup2", "Lib1", fun1, 10, 50)->AddArgs(100)->AddArgs(1000));
}

void fun2()
{
  MEASURE
  (
    for(size_t i = 0;i < iter;i++);
  )
}

void fun3()
{
  MEASURE
  (
    for(size_t i = 0;i < 10 * iter;i++);
  )
}

void fun1(size_t a)
{
  MEASURE
  (
    for(size_t i = 0;i < a * iter;i++);
  )
}

MANAK_GROUP_END();

bool bench_init()
{
  ManakSuite& master_suite = ManakSuite::GetMasterSuite();
  master_suite.AddCase(MANAK_BENCHMARK_CASE_I(B1, lib1, fun1, 10));
  master_suite.AddCase(MANAK_BENCHMARK_CASE_TI(B1, lib2, fun2, 10, 50));

  ManakSuite* Suite1 = master_suite.AddSuite(MANAK_SUITE(Suite1));

  Suite1->AddCase(MANAK_BENCHMARK_CASE_T(B2, lib1, fun4, 50));
  Suite1->AddCase(MANAK_BENCHMARK_CASE_I(B2, lib2, fun5, 10));

  ManakSuite* Suite2 = Suite1->AddSuite(MANAK_SUITE(Suite2));

  Suite2->AddCase(MANAK_CREATE_BENCHMARK_WITH_TEMPLATE_I(B3, lib1, fun3, 10)->AddArgs((size_t)2000)->AddArgs((size_t)3000));
  Suite2->AddCase(MANAK_CREATE_BENCHMARK_WITH_TEMPLATE_T(B3, lib2, fun3, 50)->AddArgs((size_t)4000)->AddArgs((size_t)6000));

  master_suite.AddGroup<MG_TestGroup>();

  return true;
}

@endcode

HTML output can be seen <a href="samples/n_mod_2.html">HERE</a>

The equivalent auto registration code can be found at @ref n_mod_ar_ex.

@section nm_cf Comparison Framework
Check out @ref comp_sm for information on comparion framework of normal module.
*/
